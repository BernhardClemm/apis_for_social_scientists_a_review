tidyverse, # needed for almost any chapter in this review
ggplot2, # e.g. CH5
tidytext, # comes in handy whenever text data is being pre-processed (CH2)
devtools, # to download any package from github (e.g., RCrowdTangle in CH4)
jsonlite, # import of JSON formats (e.g., CH4)
httr, # Tools for Working with URLs and HTTP (various chapters if an API call can me made via URL)
googleLanguageR, # allows different API calls for languga processing (CH2, CH3)
RCrowdTangle, #CH4
googleway #CH5
)
devtools::install_github("quanteda/quanteda.corpora")
devtools::install_github("cbpuschmann/RCrowdTangle")
library(googleLanguageR)
# Authentication (through your service account's JSON key file)
gl_auth("./keys/trustme-312210-41f50915e801.json")
# Load package
library(quanteda.corpora)
# Download and store corpus
guardian_corpus <- quanteda.corpora::download("data_corpus_guardian")
# Keep text only from the corpus
text <- guardian_corpus[["documents"]][["texts"]]
# For demonstration purposes, subset the text data to 20 observations only
text <- text[1:20]
# Turn text into a data frame and add an identifier
df <- as.data.frame(text)
df <- tibble::rowid_to_column(df, "ID")
syntax_analysis <- gl_nlp(df$text, nlp_type = "analyzeSyntax")
head(syntax_analysis[["tokens"]][[1]][,1:3])
# Add tokens from syntax analysis to original dataframe
df$tokens <- syntax_analysis[["tokens"]]
View(df)
# Keep nouns only
df <- df %>% dplyr::mutate(nouns = map(tokens,
~ dplyr::filter(., tag == "NOUN")))
# Load package
library(ggwordcloud)
# Create the data for the plot
data_plot <- df %>%
# only keep content variable
mutate(nouns = map(nouns,
~ select(., content))) %>%
# Write tokens in all rows into a single string
unnest(nouns) %>% # unnest tokens
# Unnest tokens
unnest_tokens(output = word, input = content) %>% # generate a wordcloud
anti_join(stop_words) %>%
dplyr::count(word) %>%
filter(n > 10) #only plot words that appear more than 10 times
# Visualize in a word cloud
data_plot %>%
ggplot(aes(label = word,
size = n)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
install.packages("htmlwidgets")
install.packages("webshot")
webshot::install_phantomjs()
# Plot places to google map
#important: in order to display the map correctly, you will also have to enable the Maps JavaScript API on GCP
map<-googleway::google_map(location = location)
key<-readtext::readtext(paste0("./keys/google_places_key.txt"))
library(googleway)
set_key(key$text)
# Option 2: Accessing the API with googleway
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 3)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot places to google map
#important: in order to display the map correctly, you will also have to enable the Maps JavaScript API on GCP
map<-googleway::google_map(location = location)
googleway::add_markers(map, data = pizza$results$geometry$location)
key<-readtext::readtext(paste0("./keys/google_places_key.txt"))
library(googleway)
key<-readtext::readtext(paste0("./keys/google_places_key.txt"))
key
library(googleway)
set_key(key$text)
library(ggplot2)
library(ggplot2)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
location
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Option 2: Accessing the API with googleway
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 3)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 3)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 4, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 3)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
pizza
View(pizza)
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 2)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 1)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
pizza$results$user_ratings_total
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings"), size = 1)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings"),  position = position_dodge(width=0.9),  size=20)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings"),  position = position_dodge(width=0.9),  size=20))) +
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(user_ratings_total, " ratings"),  position = position_dodge(width=0.9),  size=20)) +
label = paste0(user_ratings_total, " ratings", size = 1)) +
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 1)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating,
label = paste0(user_ratings_total, " ratings",
angle = 45, hjust = 0), size = 1)) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 1) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 1) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 3) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " /ratings",
angle = 90, hjust = 0), size = 3) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " ratings",
angle = 90, hjust = 0), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " \n ratings",
angle = 90, hjust = 0), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
pizza$results$user_ratings_total
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " \n ratings"), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
map<-googleway::google_streetview(location = location)
google_streetview(location = location)
google_map(location = location)
# Option 2: Accessing the API with googleway
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " \n ratings"), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
google_streetview(location = location)
pizza$results$geometry$location
location <- c(location$location$lat, location$location$lng)
google_streetview(location = location)
google_streetview(location = location[[1]])
location
google_streetview(location)
google_streetview(location=c(49.4874592,8.4660395), size = c(400,400), output = "plot",
key = key))
google_streetview(location=c(49.4874592,8.4660395), size = c(400,400), output = "plot",
key = key)
key
google_streetview(location=c(49.4874592,8.4660395), size = c(400,400), output = "plot",
key = key$text)
google_streetview(location=location, size = c(400,400), output = "plot",
key = key$text)
google_streetview(location=location, size = c(400,400), output = "plot",
key = key$text)
google_streetview(location=location, size = c(400,400), output = "plot",
key ="AIzaSyCRZkqLj-YGqgC_uqIM2gQiLk-6GsrVSD8")
google_streetview(location=location, size = c(400,400), output = "plot",
key =" key$text")
google_streetview(location=location, size = c(400,400), output = "plot",
key =" key$text")
map<-googleway::google_map(location = location)
googleway::add_markers(map, data = pizza$results$geometry$location)
locatiob
location
key<-readtext::readtext(paste0("./keys/google_places_key.txt"))
library(googleway)
set_key(key$text)
google_streetview(location=location, size = c(400,400), output = "plot",
key =" key$text")
google_streetview(location=location, size = c(400,400), output = "plot",
key =key$text)
pizza$results$geometry$location
google_streetview(location=c(49.47723,8.484281), size = c(400,400), output = "plot",
key =key$text)
google_streetview(location=c(49.47723,8.484281), size = c(400,400), output = "plot",
key =key$text)
google_streetview(location=location, size = c(400,400), output = "plot",
key =key$text)
google_streetview(location=c(49.47976,8.471768), size = c(400,400), output = "plot",
key =key$text)
google_streetview(location=c(49.48338,8.429178), size = c(400,400), output = "plot",
key =key$text)
googleway::google_map(location = location)
install.packages("mapsapi")
library(mapsapi)
r = mp_map(center = location, zoom = 14, key = key, quiet = TRUE)
r = mp_map(center = "49.48338,8.429178", zoom = 14, key = key, quiet = TRUE)
r = mp_map(center = "31.253205,34.791914", zoom = 14, key = key, quiet = TRUE)
mapsapi::mp_map(center = "31.253205,34.791914", zoom = 14, key = key, quiet = TRUE)
mapsapi::mp_map(center = "31.253205,34.791914", zoom = 14, key = key, quiet = TRUE)
r = response_map
install.packages("stars")
install.packages("stars")
plot(r)
key<-readtext::readtext(paste0("./keys/google_places_key.txt"))
library(googleway)
set_key(key$text)
library(ggplot2)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Option 2: Accessing the API with googleway
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " \n ratings"), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
# maps static API
r = mp_map(center = "49.48338,8.429178", zoom = 14, key = key, quiet = TRUE)
library(mapsapi)
# maps static API
r = mp_map(center = "49.48338,8.429178", zoom = 14, key = key, quiet = TRUE)
r = response_map
library(stars)
plot(r)
# maps static API
r = mp_map(center = location, zoom = 14, key = key, quiet = TRUE)
location
# maps static API
r = mp_map(center = ("49.487459,8.466039"), zoom = 14, key = key, quiet = TRUE)
location
location$results$geometry
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location$results$geometry
# Option 2: Accessing the API with googleway
library(ggplot2)
library(tidyverse)
library(googleway)
# Request 'Mannheim' to get latitude and longitude information
location <- google_places("Mannheim")
# Save latitude and longitude information in vector
location <- location$results$geometry
location <- c(location$location$lat, location$location$lng)
# Google places request with googleway
pizza <- google_places("Pizza", location = location, radius = 5000, place_type = "food")
# Plot rankings as barplot
pizza$results %>%
ggplot() +
geom_col(aes(x = reorder(name, rating), y = rating)) +
geom_text(aes(x = reorder(name, rating), y = rating),
label = paste0(pizza$results$user_ratings_total, " \n ratings"), size = 2) +
ylab("Average Rating")+
xlab("") +
ggtitle("Pizza Places in Mannheim by Rating") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, size = 8, hjust=0.95,vjust=0.2))
location$results$geometry
location
# maps static API
r = mp_map(center = ("49.487459,8.466039"), zoom = 14, key = key, quiet = TRUE)
r = response_map
library(stars)
plot(r)
# maps static API
r = mp_map(center = ("49.487459,8.466039"), zoom = 14, key = key, quiet = TRUE)
